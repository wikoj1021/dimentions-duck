export class Duck {
  bornPlace: SVGPathElement;
  isJumping: boolean;
  bottom: number;
  initBottom: number;
  jumpHeight: number;
  constructor(bornPlace: SVGPathElement) {
    this.bornPlace = bornPlace;
    this.isJumping = false;
    this.bottom = 155;
    this.initBottom = 155;
    this.jumpHeight = 100;
  }

  jump(duckContainer: SVGPathElement) {
    if (this.isJumping) return;
    let upId = setInterval(() => {
      if (this.bottom === this.initBottom - this.jumpHeight) {
        clearInterval(upId);
        let timerDownId = setInterval(() => {
          this.bottom += 10;
          duckContainer.setAttribute(
            "transform",
            `translate(80, ${this.bottom})`
          );
          if (this.bottom === this.initBottom) {
            clearInterval(timerDownId);
            this.isJumping = false;
          }
        }, 20);
      }
      this.isJumping = true;
      this.bottom -= 10;
      duckContainer.setAttribute("transform", `translate(80, ${this.bottom})`);
    }, 20);
  }
  init() {
    const duckContainer = document.createElementNS(
      "http://www.w3.org/2000/svg",
      "path"
    );
    duckContainer.setAttribute(
      "d",
      "M104.883 77.057c-.998-1.624-2.253-2.974-3.632-3.98l-.018.129c-.128.631-.966 1.053-1.794 1.11 1.363.813 2.627 2.081 3.612 3.681 1.574 2.56 2.151 5.502 1.509 7.682-.901 3.045-4.555 4.853-7.568 4.805-.824-.013-1.94.044-2.95.409-.099.907-.234 1.788-.412 2.618.876-.544 1.849-.796 3.078-.925 1.801-.187 4.515-.235 6.379-1.489 1.659-1.119 2.951-2.398 3.587-4.546.822-2.782.154-6.331-1.791-9.494zm-7.273-3.538l.195.065-.176-.211-.019.146zm3.623-.314l.018-.129c.373-2.281-1.216-5.689-1.741-5.42-.443.226.323 1.919-.381 2.53-.285.249-1.316-1.664-1.686-1.475-.369.188.408 2.126.149 2.26-.259.131-1.563-1.54-1.932-1.351-.275.142.944 2.456 1.969 3.752l.176.211c.279.327.535.564.73.632.272.096.587.123.903.1.83-.057 1.667-.479 1.795-1.11zm-7.605 10.262c-2.131-9.222-2.406-16.976-18.154-25-2.38 1.681-5.473 2.313-8.476 1.468l-.334.454c2.96 4.355 1.924 10.278-2.406 13.389-4.316 3.1-10.313 2.257-13.597-1.84l-.571.184c-.222 5.221-4.572 9.387-9.908 9.387-1.262 0-2.464-.238-3.575-.664 1.134 5.268 2.829 11.631 3.427 16.335-3.54.486-3.88 5.282-2.898 6.586.853 1.137 5.513.65 6.912.518 5.002-.471 3.352-16.03 6.002-18.074 1.525-1.178 3.261.147 3.498 2.301.399 3.603.638 6.35.965 8.583-1.773.313-1.941 4.486-.89 5.466 1.203 1.122 5.514 1.4 6.692.815 2.95-1.457 3.793-8.663 5.426-12.702l-.033.079s-.099-10.115 6.908-8.157c7.006 1.959 6.036 11.1 2.578 15.076.106 1.468-8.575.92-5.692 5.818.994 1.688 19.354 1.225 20.57-1.085.311-.594 2.509-4.017 3.559-8.893.178-.83.313-1.711.412-2.618.244-2.29.192-4.796-.415-7.426zm-25.153 4.394c-.218.022-.438.06-.661.133.223-.073.443-.11.661-.133zm1.438.192c-.198-.075-.4-.133-.605-.169.205.036.406.094.605.169zm-2.413.08l-.105.072.105-.072zm3.021.22c-.15-.091-.303-.167-.459-.235.155.068.309.144.459.235zm1.805 1.686c-.135-.177-.273-.344-.415-.505.142.161.281.328.415.505zm-1.093-1.182c-.179-.152-.364-.285-.552-.408.188.123.373.256.552.408zm1.628 1.951c-.146-.231-.297-.455-.455-.666.157.211.308.434.455.666zm-5.656-2.471l-.118.109.118-.109zm6.994 5.177l.166.461-.086-.259-.08-.202zm-7.536-4.594l-.114.169.114-.169zm4.63-.005c.161.142.318.296.472.46-.154-.164-.31-.318-.472-.46zm2.011 2.649c-.108-.199-.219-.392-.335-.58.116.189.227.381.335.58zm-4.645-3.713c.172-.008.342-.002.511.021-.169-.023-.338-.029-.511-.021zm-2.704 2.321l-.105.239.105-.239zm.46-.881l-.113.195.113-.195zm-.235.418l-.109.222.109-.222zm.629-.967l.118-.141-.118.141zm8.286 8.077l-.054-.291.054.291zm-.417-1.861l-.12-.4.12.4zm-.558-1.643c-.093-.237-.191-.472-.295-.703.104.232.203.467.295.703zm.802 2.596l-.089-.37.089.37zm-1.143-3.401c-.118-.262-.246-.517-.377-.767.132.25.259.505.377.767zm-1.164-9.917c-7.007-1.958-6.908 8.157-6.908 8.157l.033-.079.109-.26.105-.239.116-.241.109-.222.122-.223.113-.195.134-.202.114-.169.146-.178.118-.141.161-.155.118-.109.19-.132.105-.072c.102-.058.206-.104.313-.139.224-.073.443-.11.661-.133l.185-.011c.172-.008.342-.002.511.021l.138.013c.205.036.407.094.605.169l.149.064c.156.068.309.145.459.235l.161.097c.188.123.373.256.552.408l.061.058c.161.142.318.296.472.46l.146.159c.142.161.28.328.415.505l.08.103c.158.211.309.435.455.666l.108.177c.116.188.227.381.335.58l.098.179c.131.25.259.505.377.767l.045.103c.104.231.203.466.295.703l.079.198.079.202.086.259.194.583.12.4.154.583.089.37.119.617.054.291c.044.295.079.581.098.85 3.458-3.978 4.428-13.118-2.578-15.077zm-22.526-10.472l.571-.184c3.284 4.097 9.281 4.939 13.597 1.84 4.33-3.11 5.366-9.033 2.406-13.389l.334-.454c3.003.845 6.096.213 8.476-1.468 1.665-1.175 2.983-2.86 3.664-4.932 1.662-5.053-1.054-10.472-6.08-12.252l.001-.151-.003-.362c5.027-1.781 7.743-7.201 6.081-12.253-1.651-5.023-7.017-7.821-12.114-6.4.561 2.884-.423 5.997-2.092 7.007-.249.15-.005.583-.012.87 3.495 4.005 5.544 6.87 5.542 12.123-.001 2.154-1.183 4.991-3.215 7.973-.368.541 3.27 2.856 2.845 3.404-.379.492-4.396-1.274-4.816-.781-.255.299 2.593 2.519 2.229 2.926-.448.503-4.117-.802-4.472-.437-.435.449 2.518 2.283 2.053 2.722-.498.471-4.416-.455-4.944 0-5.738 4.949-13.193 8.883-20.564 8.883-7.45 0-14.983-3.912-20.742-8.881-.394-.339-3.987.592-4.363.244-.425-.396 2.366-2.071 1.965-2.474-.452-.453-3.809.568-4.228.106-.345-.378 2.242-2.237 1.918-2.619-.387-.459-3.588.771-3.939.312-.408-.534 2.041-2.759 1.684-3.289-2-2.975-3.163-5.845-3.162-8.108.002-5.672 2.393-8.891 6.413-13.06-5.419-3.676.332-11.098 3.715-12.082 5.335-1.551 9.783 3.102 11.146 4.4 1.099.601 5.34-1.945 9.61-1.943 4.578.001 9.29 3.015 10.721 2.231.7-1.016 6.277-6.565 12.105-4.77 2.468.76 3.832 2.531 4.415 4.509 2.734-4.326 1.664-10.064-2.576-13.108-4.375-3.142-10.478-2.234-13.731 2.007l-.432-.139c-.107-5.32-4.505-9.601-9.914-9.601s-9.806 4.28-9.914 9.601l-.432.139c-3.252-4.242-9.354-5.15-13.731-2.008-4.367 3.136-5.384 9.135-2.33 13.5l-.282.379c-5.143-1.521-10.6 1.289-12.268 6.362-1.661 5.053 1.054 10.474 6.082 12.254l-.002.363.001.15c-5.026 1.779-7.742 7.2-6.081 12.252 1.654 5.03 7.035 7.835 12.14 6.398l.333.454c-2.96 4.355-1.924 10.279 2.406 13.391 4.317 3.098 10.315 2.257 13.598-1.84l.572.184c.168 3.986 2.749 7.353 6.333 8.723 1.11.426 2.313.664 3.575.664 5.336.001 9.686-4.165 9.908-9.386zm12.33-55.247c-5.828-1.796-11.405 3.754-12.105 4.77-1.704 4.031-5.827 15.747-6.516 22.294 1.399.313 1.706.828 1.57 1.58 3.338 1.657 4.681 4.95 4.68 8.747-.002 5.461-4.748 8.349-10.418 8.348-5.672-.003-10.122-2.894-10.12-8.353.001-3.624 1.23-6.783 4.244-8.504-.085-.208-.107-.408-.049-.591.253-.784.748-1.229 1.925-1.444-.839-6.511-2.573-15.218-5.647-22.364-1.363-1.299-5.81-5.951-11.146-4.4-3.384.983-9.135 8.406-3.715 12.082-4.02 4.168-6.41 7.387-6.413 13.06 0 2.264 1.162 5.133 3.162 8.108.357.53-2.092 2.754-1.684 3.289.351.459 3.553-.771 3.939-.312.323.382-2.264 2.241-1.918 2.619.419.462 3.776-.559 4.228-.106.401.402-2.39 2.078-1.965 2.474.376.348 3.97-.583 4.363-.244 5.759 4.969 13.292 8.881 20.742 8.881 7.372 0 14.826-3.934 20.564-8.883.528-.455 4.446.471 4.944 0 .464-.438-2.488-2.273-2.053-2.722.354-.365 4.023.94 4.472.437.363-.407-2.484-2.627-2.229-2.926.42-.493 4.437 1.273 4.816.781.424-.548-3.213-2.863-2.845-3.404 2.032-2.982 3.214-5.819 3.215-7.973.001-5.253-2.048-8.118-5.542-12.123.007-.287-.236-.719.012-.87 1.668-1.011 2.653-4.123 2.092-7.007-.048-.248-.118-.49-.189-.733-.582-1.981-1.946-3.751-4.414-4.511zm-34.498 31.198c-.394 3.091-3.194 5.275-6.255 4.879-3.06-.396-5.223-3.224-4.831-6.316.328-2.573 2.325-4.513 4.75-4.864-.264-.38-.448-.822-.5-1.316-.16-1.552.956-2.94 2.493-3.102 1.536-.163 2.912.964 3.072 2.515.115 1.117-.436 2.144-1.325 2.695 1.8 1.131 2.884 3.248 2.596 5.509zm23.515 0c-.287-2.262.797-4.378 2.596-5.509-.889-.552-1.442-1.578-1.325-2.695.161-1.551 1.536-2.677 3.073-2.515 1.536.162 2.652 1.55 2.492 3.102-.052.494-.235.936-.5 1.316 2.426.351 4.423 2.291 4.75 4.864.393 3.092-1.77 5.92-4.83 6.316-3.063.396-5.863-1.787-6.256-4.879zm-11.121-4.478c1.582.055 2.7.169 3.483.343.688-6.547 4.812-18.263 6.516-22.294-1.431.784-6.143-2.229-10.721-2.231-4.27-.002-8.512 2.543-9.61 1.943 3.074 7.146 4.809 15.853 5.647 22.364.989-.182 2.458-.203 4.685-.125zm-.083 5.508l-.262 5.794c.642.601 2.333.853 3.121.615 2.543-.768 2.772-2.773 2.936-2.917.219-.194.801.067.638.257-.119.14-.408 2.371-3.188 3.298-1.003.335-3.35.14-3.94-.443-.696.525-2.982.61-3.959.191-2.376-1.021-2.694-3.162-2.8-3.49-.104-.318.455-.444.598-.218.104.167.459 2.27 2.758 3.099.764.274 2.487.09 3.039-.44l.256-5.696c-1.565-.115-5.095-1.979-5.675-3.398-3.014 1.721-4.243 4.88-4.244 8.504-.002 5.459 4.447 8.35 10.12 8.353 5.67.001 10.416-2.887 10.418-8.348.001-3.797-1.341-7.09-4.68-8.747-.023.128-.056.261-.103.403-.407 1.267-3.184 2.853-5.033 3.183zm-4.601-5.383c-1.178.215-1.672.66-1.925 1.444-.059.184-.037.383.049.591.58 1.419 4.11 3.283 5.675 3.398l-.256 5.696c-.552.53-2.275.715-3.039.44-2.298-.829-2.654-2.931-2.758-3.099-.143-.227-.703-.1-.598.218.106.328.424 2.469 2.8 3.49.977.419 3.263.334 3.959-.191.59.583 2.937.778 3.94.443 2.78-.927 3.069-3.159 3.188-3.298.163-.19-.419-.451-.638-.257-.164.144-.393 2.149-2.936 2.917-.789.237-2.479-.015-3.121-.615l.262-5.794c1.849-.33 4.626-1.917 5.034-3.182l.103-.403c.136-.751-.171-1.267-1.57-1.58-.784-.174-1.902-.288-3.483-.343-2.229-.078-3.698-.057-4.686.125zm26.89 2.916c-.327-2.573-2.324-4.513-4.75-4.864-.564.813-1.526 1.31-2.573 1.2-.43-.045-.821-.193-1.167-.407-1.798 1.131-2.882 3.247-2.596 5.509.394 3.091 3.193 5.275 6.256 4.879 3.06-.397 5.223-3.224 4.83-6.317zm-4.75-4.864c.264-.38.448-.822.5-1.316.161-1.552-.956-2.94-2.492-3.102-1.537-.163-2.912.964-3.073 2.515-.117 1.117.437 2.144 1.325 2.695.346.214.737.362 1.167.407 1.047.111 2.009-.386 2.573-1.199zm-32.445.792c-.346.214-.737.362-1.166.407-1.048.11-2.01-.386-2.574-1.2-2.426.351-4.423 2.291-4.75 4.864-.393 3.092 1.771 5.92 4.831 6.316 3.062.396 5.862-1.788 6.255-4.879.287-2.26-.797-4.377-2.596-5.508zm-1.166.408c.429-.045.82-.193 1.166-.407.889-.551 1.44-1.578 1.325-2.695-.16-1.551-1.536-2.677-3.072-2.515-1.538.162-2.653 1.55-2.493 3.102.052.494.236.936.5 1.316.563.812 1.525 1.309 2.574 1.199z"
    );
    duckContainer.setAttribute("transform", `translate(80, ${this.bottom})`);
    duckContainer.style.stroke = "#cc05d3";
    duckContainer.style.strokeWidth = "5px";
    duckContainer.style.bottom = this.initBottom + "px";

    const duck = document.createElement("div");
    duck.classList.add("duck");

    this.bornPlace.appendChild(duckContainer);
    duckContainer.appendChild(duck);

    document.addEventListener("keydown", (e: KeyboardEvent) => {
      if (e.code === "Space") {
        this.jump(duckContainer);
      }
    });
  }
}
